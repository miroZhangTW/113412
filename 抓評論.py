# -*- coding: utf-8 -*-
"""Untitled19.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BnNzXzkixru84lxm1ivhvZOORDIVYhQX
"""

import requests
from bs4 import BeautifulSoup

base_url = "https://www.cosme.net.tw/brands/12"
headers = {'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}

def get_reviews(url):
    response = requests.get(url, headers=headers)
    response.encoding = 'utf8'
    soup = BeautifulSoup(response.text, 'html.parser')

    # 找到所有class="uc-review uc-review-with-product"的元素
    reviews = soup.find_all(class_="uc-review uc-review-with-product")

    for review in reviews:
        # 在每個評論中找到class="product-info-container"元素
        product_info = review.find(class_="product-info-container")
        # 在評論中找到class="two-line-dot uc-content-link"元素
        content_link = review.find(class_="two-line-dot uc-content-link")
        # 在評論中找到class="review-score"元素
        review_score = review.find(class_="review-score")

        # 提取class="product-info-container"中的文字
        product_name = product_info.text.strip() if product_info else "N/A"
        # 提取class="two-line-dot uc-content-link"中的文字
        content_text = content_link.text.strip() if content_link else "N/A"
        # 提取class="review-score"中的文字
        review_score_text = review_score.text.strip() if review_score else "N/A"

        # 打印提取的數據
        print("產品名稱:", product_name)
        print("評論內容:", content_text)
        print("評論評分:", review_score_text)
        print("----")

# 獲取總頁數
response = requests.get(base_url, headers=headers)
response.encoding = 'utf8'
soup = BeautifulSoup(response.text, 'html.parser')
# 使用find找總頁數，如果找不到，預設為1頁
page_count = int(soup.find(class_="last").find('a')['href'].split('=')[-1]) if soup.find(class_="last") else 1

# 遍歷所有頁面
for page in range(1, page_count + 1):
    url = f"{base_url}?page={page}"
    get_reviews(url)

import requests
from bs4 import BeautifulSoup

# 要迭代的品牌 ID 範圍
brand_ids_range = range(1738, 1740)

# 基本 URL
base_url_template = "https://www.cosme.net.tw/brands/{}/reviews?=page"
headers = {'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'}

review_number = 0

for brand_id in brand_ids_range:
    page_number = 1
    base_url = base_url_template.format(brand_id)

    while True:
        url = f"{base_url}{page_number}"
        response = requests.get(url, headers=headers)
        response.encoding = 'utf8'

        soup = BeautifulSoup(response.text, 'html.parser')

        # 檢查是否有評論
        reviews = soup.find_all(class_="uc-review uc-review-with-product")
        if not reviews:
            print(f"品牌 {brand_id} 沒有評論，停止執行。")
            break

        for review in reviews:
            review_number += 1  # 每迭代一次增加評論編號

            # 在每個評論中找到class="product-info-container"元素
            product_info = review.find(class_="product-info-container")

            # 在評論中找到class="two-line-dot uc-content-link"元素
            content_link = review.find(class_="two-line-dot uc-content-link")

            # 在評論中找到class="review-score"元素
            review_score = review.find(class_="review-score")

            # 提取class="product-info-container"中的文字
            product_name = product_info.text.strip() if product_info else "N/A"

            # 提取class="two-line-dot uc-content-link"中的文字
            content_text = content_link.text.strip()

            # 提取class="review-score"中的文字
            review_score_text = review_score.text.strip() if review_score else "N/A"

            # 打印提取的數據，包括評論編號和品牌 ID
            print(f"品牌ID: {brand_id}")
            print(f"編號: {review_number}")
            print("產品名稱:", product_name)
            print("評論內容:", content_text)
            print("評論評分:", review_score_text)
            print("----")

        # 如果達到最後一頁，則結束迴圈
        if "沒有更多頁面的標誌" in response.text:
            break

        page_number += 1